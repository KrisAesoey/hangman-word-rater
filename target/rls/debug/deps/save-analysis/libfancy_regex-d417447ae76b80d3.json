{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0","program":"C:\\Users\\krisa\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","fancy_regex","--edition=2018","C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=d417447ae76b80d3","-C","extra-filename=-d417447ae76b80d3","--out-dir","c:\\Users\\krisa\\Desktop\\Files\\Coding\\Rust\\hangman-word-rater\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\krisa\\Desktop\\Files\\Coding\\Rust\\hangman-word-rater\\target\\rls\\debug\\deps","--extern","bit_set=c:\\Users\\krisa\\Desktop\\Files\\Coding\\Rust\\hangman-word-rater\\target\\rls\\debug\\deps\\libbit_set-ad579830aa36d9b9.rmeta","--extern","regex=c:\\Users\\krisa\\Desktop\\Files\\Coding\\Rust\\hangman-word-rater\\target\\rls\\debug\\deps\\libregex-bf9f4534384ca5ff.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\krisa\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\krisa\\Desktop\\Files\\Coding\\Rust\\hangman-word-rater\\target\\rls\\debug\\deps\\libfancy_regex-d417447ae76b80d3.rmeta"},"prelude":{"crate_id":{"name":"fancy_regex","disambiguator":[10669282190797084449,6120240979331134457]},"crate_root":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src","external_crates":[{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2951836381390344939,16649128255697415692]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11710271729537087300,7936810236211621860]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[221620535861096092,14052674651022364528]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6754765288211962248,11319126938093173531]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12146955935630897969,9411134559866261862]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14833668363639865695,5655522694650611187]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4272166054306925428,11429919485785531186]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12683507629027033058,3032465482526171902]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3621516987667804763,14118985286121416357]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3114763798488812350,3771385689256703239]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[12308387851717752688,1271721453298801945]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[41357415245366713,267475365531445088]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[14877867959531453948,6948897495248942720]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\analyze.rs","num":14,"id":{"name":"bit_set","disambiguator":[11815319388927486037,11473902431964399014]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\analyze.rs","num":15,"id":{"name":"bit_vec","disambiguator":[15058298860786479472,945800146646754616]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\parse.rs","num":16,"id":{"name":"regex","disambiguator":[16708230686113223120,2504657980424758453]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\parse.rs","num":17,"id":{"name":"aho_corasick","disambiguator":[3965871490860746457,13775883191149742722]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\parse.rs","num":18,"id":{"name":"memchr","disambiguator":[10217865961661611903,12425849656899133429]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\parse.rs","num":19,"id":{"name":"regex_syntax","disambiguator":[15691710534566068493,2760826650586284119]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\parse.rs","num":20,"id":{"name":"thread_local","disambiguator":[8502248513495985700,10971054996155022084]}},{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\parse.rs","num":21,"id":{"name":"lazy_static","disambiguator":[4516623831510152009,17434107222073870648]}}],"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":1119,"byte_end":34559,"line_start":21,"line_end":1080,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":5029,"byte_end":5034,"line_start":166,"line_end":166,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":5036,"byte_end":5042,"line_start":166,"line_end":166,"column_start":31,"column_end":37},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":5068,"byte_end":5076,"line_start":167,"line_end":167,"column_start":24,"column_end":32},"alias_span":null,"name":"Expander","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":31888,"byte_end":31895,"line_start":988,"line_end":988,"column_start":29,"column_end":36},"alias_span":null,"name":"analyze","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":31925,"byte_end":31932,"line_start":989,"line_end":989,"column_start":29,"column_end":36},"alias_span":null,"name":"compile","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":31958,"byte_end":31969,"line_start":990,"line_end":990,"column_start":25,"column_end":36},"alias_span":null,"name":"run_default","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":31971,"byte_end":31980,"line_start":990,"line_end":990,"column_start":38,"column_end":47},"alias_span":null,"name":"run_trace","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":31982,"byte_end":31986,"line_start":990,"line_end":990,"column_start":49,"column_end":53},"alias_span":null,"name":"Insn","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":31988,"byte_end":31992,"line_start":990,"line_end":990,"column_start":55,"column_end":59},"alias_span":null,"name":"Prog","value":"","parent":{"krate":0,"index":332}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":1119,"byte_end":34559,"line_start":21,"line_end":1080,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":654},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":36},{"krate":0,"index":95},{"krate":0,"index":102},{"krate":0,"index":146},{"krate":0,"index":195},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":516},{"krate":0,"index":538},{"krate":0,"index":535},{"krate":0,"index":532},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":540},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":563},{"krate":0,"index":567},{"krate":0,"index":574},{"krate":0,"index":572},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":285},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":308},{"krate":0,"index":576},{"krate":0,"index":630},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":632},{"krate":0,"index":650},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":642},{"krate":0,"index":641},{"krate":0,"index":313},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332}],"decl_id":null,"docs":"An implementation of regexes, supporting a relatively rich set of features, including backreferences\nand lookaround.","sig":null,"attributes":[{"value":"!\nAn implementation of regexes, supporting a relatively rich set of features, including backreferences\nand lookaround.\n\nIt builds on top of the excellent [regex] crate. If you are not\nfamiliar with it, make sure you read its documentation and maybe you don't even need fancy-regex.\n\nIf your regex or parts of it does not use any special features, the matching is delegated to the\nregex crate. That means it has linear runtime. But if you use \"fancy\" features such as\nbackreferences or look-around, an engine with backtracking needs to be used. In that case, the regex\ncan be slow and take exponential time to run because of what is called \"catastrophic backtracking\".\nThis depends on the regex and the input.\n\n# Usage\n\nThe API should feel very similar to the regex crate, and involves compiling a regex and then using\nit to find matches in text.\n\n## Example: Matching text\n\nAn example with backreferences to check if a text consists of two identical words:\n\n```rust\nuse fancy_regex::Regex;\n\nlet re = Regex::new(r\"^(\\w+) (\\1)$\").unwrap();\nlet result = re.is_match(\"foo foo\");\n\nassert!(result.is_ok());\nlet did_match = result.unwrap();\nassert!(did_match);\n```\n\nNote that like in the regex crate, the regex needs anchors like `^` and `$` to match against the\nentire input text.\n\n## Example: Finding the position of matches\n\n```rust\nuse fancy_regex::Regex;\n\nlet re = Regex::new(r\"(\\d)\\1\").unwrap();\nlet result = re.find(\"foo 22\");\n\nassert!(result.is_ok(), \"execution was successful\");\nlet match_option = result.unwrap();\n\nassert!(match_option.is_some(), \"found a match\");\nlet m = match_option.unwrap();\n\nassert_eq!(m.start(), 4);\nassert_eq!(m.end(), 6);\nassert_eq!(m.as_str(), \"22\");\n```\n\n## Example: Capturing groups\n\n```rust\nuse fancy_regex::Regex;\n\nlet re = Regex::new(r\"(?<!AU)\\$(\\d+)\").unwrap();\nlet result = re.captures(\"AU$10, $20\");\n\nlet captures = result.expect(\"Error running regex\").expect(\"No match found\");\nlet group = captures.get(1).expect(\"No group\");\nassert_eq!(group.as_str(), \"20\");\n```\n\n# Syntax\n\nThe regex syntax is based on the [regex] crate's, with some additional supported syntax.\n\nEscapes:\n\n`\\h`\n: hex digit (`[0-9A-Fa-f]`) \\\n`\\H`\n: not hex digit (`[^0-9A-Fa-f]`) \\\n`\\e`\n: escape control character (`\\x1B`)\n\nBackreferences:\n\n`\\1`\n: match the exact string that the first capture group matched \\\n`\\2`\n: backref to the second capture group, etc\n\nNamed capture groups:\n\n`(?<name>exp)`\n: match *exp*, creating capture group named *name* \\\n`\\k<name>`\n: match the exact string that the capture group named *name* matched \\\n`(?P<name>exp)`\n: same as `(?<name>exp)` for compatibility with Python, etc. \\\n`(?P=name)`\n: same as `\\k<name>` for compatibility with Python, etc.\n\nLook-around assertions for matching without changing the current position:\n\n`(?=exp)`\n: look-ahead, succeeds if *exp* matches to the right of the current position \\\n`(?!exp)`\n: negative look-ahead, succeeds if *exp* doesn't match to the right \\\n`(?<=exp)`\n: look-behind, succeeds if *exp* matches to the left of the current position \\\n`(?<!exp)`\n: negative look-behind, succeeds if *exp* doesn't match to the left\n\nAtomic groups using `(?>exp)` to prevent backtracking within `exp`, e.g.:\n\n```\n# use fancy_regex::Regex;\nlet re = Regex::new(r\"^a(?>bc|b)c$\").unwrap();\nassert!(re.is_match(\"abcc\").unwrap());\n// Doesn't match because `|b` is never tried because of the atomic group\nassert!(!re.is_match(\"abc\").unwrap());\n```\n\n[regex]: https://crates.io/crates/regex\n*/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":1119,"byte_end":4573,"line_start":21,"line_end":142,"column_start":1,"column_end":3}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":4636,"byte_end":4658,"line_start":145,"line_end":145,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":4659,"byte_end":4698,"line_start":146,"line_end":146,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\analyze.rs","byte_start":35899,"byte_end":35903,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"Info","qualname":"::analyze::Info","value":"Info {  }","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\analyze.rs","byte_start":42475,"byte_end":42482,"line_start":211,"line_end":211,"column_start":8,"column_end":15},"name":"analyze","qualname":"::analyze::analyze","value":"pub fn analyze<'a>(&'a ExprTree) -> Result<Info>","parent":null,"children":[],"decl_id":null,"docs":" Analyze the parsed expression to determine whether it requires fancy features.\n","sig":null,"attributes":[{"value":"/ Analyze the parsed expression to determine whether it requires fancy features.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\analyze.rs","byte_start":42385,"byte_end":42467,"line_start":210,"line_end":210,"column_start":1,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\compile.rs","byte_start":59264,"byte_end":59271,"line_start":451,"line_end":451,"column_start":8,"column_end":15},"name":"compile","qualname":"::compile::compile","value":"pub fn compile(&Info) -> Result<Prog>","parent":null,"children":[],"decl_id":null,"docs":" Compile the analyzed expressions into a program.\n","sig":null,"attributes":[{"value":"/ Compile the analyzed expressions into a program.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\compile.rs","byte_start":59204,"byte_end":59256,"line_start":450,"line_end":450,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66259,"byte_end":66265,"line_start":4,"line_end":4,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type for this crate with specific error enum.\n","sig":null,"attributes":[{"value":"/ Result type for this crate with specific error enum.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66193,"byte_end":66249,"line_start":3,"line_end":3,"column_start":1,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66461,"byte_end":66471,"line_start":11,"line_end":11,"column_start":5,"column_end":15},"name":"ParseError","qualname":"::error::Error::ParseError","value":"Error::ParseError","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" General parsing error\n","sig":null,"attributes":[{"value":"/ General parsing error","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66431,"byte_end":66456,"line_start":10,"line_end":10,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66546,"byte_end":66563,"line_start":13,"line_end":13,"column_start":5,"column_end":22},"name":"UnclosedOpenParen","qualname":"::error::Error::UnclosedOpenParen","value":"Error::UnclosedOpenParen","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Opening parenthesis without closing parenthesis, e.g. `(a|b`\n","sig":null,"attributes":[{"value":"/ Opening parenthesis without closing parenthesis, e.g. `(a|b`","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66477,"byte_end":66541,"line_start":12,"line_end":12,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66599,"byte_end":66612,"line_start":15,"line_end":15,"column_start":5,"column_end":18},"name":"InvalidRepeat","qualname":"::error::Error::InvalidRepeat","value":"Error::InvalidRepeat","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Invalid repeat syntax\n","sig":null,"attributes":[{"value":"/ Invalid repeat syntax","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66569,"byte_end":66594,"line_start":14,"line_end":14,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66652,"byte_end":66669,"line_start":17,"line_end":17,"column_start":5,"column_end":22},"name":"RecursionExceeded","qualname":"::error::Error::RecursionExceeded","value":"Error::RecursionExceeded","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Pattern too deeply nested\n","sig":null,"attributes":[{"value":"/ Pattern too deeply nested","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66618,"byte_end":66647,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66727,"byte_end":66745,"line_start":19,"line_end":19,"column_start":5,"column_end":23},"name":"LookBehindNotConst","qualname":"::error::Error::LookBehindNotConst","value":"Error::LookBehindNotConst","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Look-behind assertion without constant size\n","sig":null,"attributes":[{"value":"/ Look-behind assertion without constant size","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66675,"byte_end":66722,"line_start":18,"line_end":18,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66797,"byte_end":66814,"line_start":21,"line_end":21,"column_start":5,"column_end":22},"name":"TrailingBackslash","qualname":"::error::Error::TrailingBackslash","value":"Error::TrailingBackslash","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Backslash without following character\n","sig":null,"attributes":[{"value":"/ Backslash without following character","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66751,"byte_end":66792,"line_start":20,"line_end":20,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66843,"byte_end":66856,"line_start":23,"line_end":23,"column_start":5,"column_end":18},"name":"InvalidEscape","qualname":"::error::Error::InvalidEscape","value":"Error::InvalidEscape(String)","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Invalid escape\n","sig":null,"attributes":[{"value":"/ Invalid escape","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66820,"byte_end":66838,"line_start":22,"line_end":22,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66904,"byte_end":66923,"line_start":25,"line_end":25,"column_start":5,"column_end":24},"name":"UnclosedUnicodeName","qualname":"::error::Error::UnclosedUnicodeName","value":"Error::UnclosedUnicodeName","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Unicode escape not closed\n","sig":null,"attributes":[{"value":"/ Unicode escape not closed","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66870,"byte_end":66899,"line_start":24,"line_end":24,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66956,"byte_end":66966,"line_start":27,"line_end":27,"column_start":5,"column_end":15},"name":"InvalidHex","qualname":"::error::Error::InvalidHex","value":"Error::InvalidHex","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Invalid hex escape\n","sig":null,"attributes":[{"value":"/ Invalid hex escape","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66929,"byte_end":66951,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67024,"byte_end":67045,"line_start":29,"line_end":29,"column_start":5,"column_end":26},"name":"InvalidCodepointValue","qualname":"::error::Error::InvalidCodepointValue","value":"Error::InvalidCodepointValue","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Invalid codepoint for hex or unicode escape\n","sig":null,"attributes":[{"value":"/ Invalid codepoint for hex or unicode escape","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66972,"byte_end":67019,"line_start":28,"line_end":28,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67083,"byte_end":67095,"line_start":31,"line_end":31,"column_start":5,"column_end":17},"name":"InvalidClass","qualname":"::error::Error::InvalidClass","value":"Error::InvalidClass","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Invalid character class\n","sig":null,"attributes":[{"value":"/ Invalid character class","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67051,"byte_end":67078,"line_start":30,"line_end":30,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67128,"byte_end":67139,"line_start":33,"line_end":33,"column_start":5,"column_end":16},"name":"UnknownFlag","qualname":"::error::Error::UnknownFlag","value":"Error::UnknownFlag(String)","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Unknown group flag\n","sig":null,"attributes":[{"value":"/ Unknown group flag","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67101,"byte_end":67123,"line_start":32,"line_end":32,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67193,"byte_end":67214,"line_start":35,"line_end":35,"column_start":5,"column_end":26},"name":"NonUnicodeUnsupported","qualname":"::error::Error::NonUnicodeUnsupported","value":"Error::NonUnicodeUnsupported","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Disabling Unicode not supported\n","sig":null,"attributes":[{"value":"/ Disabling Unicode not supported","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67153,"byte_end":67188,"line_start":34,"line_end":34,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":382},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67251,"byte_end":67265,"line_start":37,"line_end":37,"column_start":5,"column_end":19},"name":"InvalidBackref","qualname":"::error::Error::InvalidBackref","value":"Error::InvalidBackref","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Invalid back reference\n","sig":null,"attributes":[{"value":"/ Invalid back reference","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67220,"byte_end":67246,"line_start":36,"line_end":36,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67297,"byte_end":67307,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"InnerError","qualname":"::error::Error::InnerError","value":"Error::InnerError(regex::Error)","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Regex crate error\n","sig":null,"attributes":[{"value":"/ Regex crate error","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67271,"byte_end":67292,"line_start":38,"line_end":38,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67361,"byte_end":67377,"line_start":41,"line_end":41,"column_start":5,"column_end":21},"name":"InvalidGroupName","qualname":"::error::Error::InvalidGroupName","value":"Error::InvalidGroupName","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Couldn't parse group name\n","sig":null,"attributes":[{"value":"/ Couldn't parse group name","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67327,"byte_end":67356,"line_start":40,"line_end":40,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67427,"byte_end":67450,"line_start":43,"line_end":43,"column_start":5,"column_end":28},"name":"InvalidGroupNameBackref","qualname":"::error::Error::InvalidGroupNameBackref","value":"Error::InvalidGroupNameBackref(String)","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Invalid group id in escape sequence\n","sig":null,"attributes":[{"value":"/ Invalid group id in escape sequence","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67383,"byte_end":67422,"line_start":42,"line_end":42,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67536,"byte_end":67552,"line_start":45,"line_end":45,"column_start":5,"column_end":21},"name":"NamedBackrefOnly","qualname":"::error::Error::NamedBackrefOnly","value":"Error::NamedBackrefOnly","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Once named groups are used you cannot refer to groups by number\n","sig":null,"attributes":[{"value":"/ Once named groups are used you cannot refer to groups by number","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67464,"byte_end":67531,"line_start":44,"line_end":44,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67654,"byte_end":67667,"line_start":49,"line_end":49,"column_start":5,"column_end":18},"name":"StackOverflow","qualname":"::error::Error::StackOverflow","value":"Error::StackOverflow","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Max stack size exceeded for backtracking while executing regex.\n","sig":null,"attributes":[{"value":"/ Max stack size exceeded for backtracking while executing regex.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67582,"byte_end":67649,"line_start":48,"line_end":48,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67866,"byte_end":67888,"line_start":53,"line_end":53,"column_start":5,"column_end":27},"name":"BacktrackLimitExceeded","qualname":"::error::Error::BacktrackLimitExceeded","value":"Error::BacktrackLimitExceeded","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Max limit for backtracking count exceeded while executing the regex.\n Configure using\n [`RegexBuilder::backtrack_limit`](struct.RegexBuilder.html#method.backtrack_limit).\n","sig":null,"attributes":[{"value":"/ Max limit for backtracking count exceeded while executing the regex.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67673,"byte_end":67745,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ Configure using","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67750,"byte_end":67769,"line_start":51,"line_end":51,"column_start":5,"column_end":24}},{"value":"/ [`RegexBuilder::backtrack_limit`](struct.RegexBuilder.html#method.backtrack_limit).","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67774,"byte_end":67861,"line_start":52,"line_end":52,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":68092,"byte_end":68107,"line_start":58,"line_end":58,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::error::Error::__Nonexhaustive","value":"Error::__Nonexhaustive","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" This enum may grow additional variants, so this makes sure clients don't count on exhaustive\n matching. Otherwise, adding a new variant could break existing code.\n","sig":null,"attributes":[{"value":"/ This enum may grow additional variants, so this makes sure clients don't count on exhaustive","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67895,"byte_end":67991,"line_start":55,"line_end":55,"column_start":5,"column_end":101}},{"value":"/ matching. Otherwise, adding a new variant could break existing code.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":67996,"byte_end":68068,"line_start":56,"line_end":56,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66392,"byte_end":66397,"line_start":8,"line_end":8,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n\n    /// General parsing error\n    ParseError,\n\n    /// Opening parenthesis without closing parenthesis, e.g. `(a|b`\n    UnclosedOpenParen,\n\n    /// Invalid repeat syntax\n    InvalidRepeat,\n\n    /// Pattern too deeply nested\n    RecursionExceeded,\n\n    /// Look-behind assertion without constant size\n    LookBehindNotConst,\n\n    /// Backslash without following character\n    TrailingBackslash,\n\n    /// Invalid escape\n    InvalidEscape(String),\n\n    /// Unicode escape not closed\n    UnclosedUnicodeName,\n\n    /// Invalid hex escape\n    InvalidHex,\n\n    /// Invalid codepoint for hex or unicode escape\n    InvalidCodepointValue,\n\n    /// Invalid character class\n    InvalidClass,\n\n    /// Unknown group flag\n    UnknownFlag(String),\n\n    /// Disabling Unicode not supported\n    NonUnicodeUnsupported,\n\n    /// Invalid back reference\n    InvalidBackref,\n\n    /// Regex crate error\n    InnerError(regex::Error),\n\n    /// Couldn't parse group name\n    InvalidGroupName,\n\n    /// Invalid group id in escape sequence\n    InvalidGroupNameBackref(String),\n\n    /// Once named groups are used you cannot refer to groups by number\n    NamedBackrefOnly,\n\n    /// Max stack size exceeded for backtracking while executing regex.\n    StackOverflow,\n\n    /// Max limit for backtracking count exceeded while executing the regex.\n    /// Configure using\n    /// [`RegexBuilder::backtrack_limit`](struct.RegexBuilder.html#method.backtrack_limit).\n    BacktrackLimitExceeded,\n\n    /// This enum may grow additional variants, so this makes sure clients don't count on exhaustive\n    /// matching. Otherwise, adding a new variant could break existing code.\n    #[doc(hidden)]\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398}],"decl_id":null,"docs":" An error for the result of compiling or running a regex.\n","sig":null,"attributes":[{"value":"/ An error for the result of compiling or running a regex.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":66305,"byte_end":66365,"line_start":6,"line_end":6,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":70519,"byte_end":70527,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Expander","qualname":"::expand::Expander","value":"Expander {  }","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406}],"decl_id":null,"docs":" A set of options for expanding a template string using the contents\n of capture groups.\n","sig":null,"attributes":[{"value":"/ A set of options for expanding a template string using the contents","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":70396,"byte_end":70467,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ of capture groups.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":70468,"byte_end":70490,"line_start":8,"line_end":8,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":72019,"byte_end":72025,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"python","qualname":"<Expander>::python","value":"pub fn python() -> Expander","parent":null,"children":[],"decl_id":null,"docs":" Returns an expander that uses Python-compatible syntax.","sig":null,"attributes":[{"value":"/ Returns an expander that uses Python-compatible syntax.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":70998,"byte_end":71057,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71062,"byte_end":71065,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Expands all instances of `\\num` or `\\g<name>` in `replacement`","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71070,"byte_end":71136,"line_start":34,"line_end":34,"column_start":5,"column_end":71}},{"value":"/ to the corresponding capture group `num` or `name`, and writes","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71141,"byte_end":71207,"line_start":35,"line_end":35,"column_start":5,"column_end":71}},{"value":"/ them to the `dst` buffer given.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71212,"byte_end":71247,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71252,"byte_end":71255,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ `name` may be an integer corresponding to the index of the","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71260,"byte_end":71322,"line_start":38,"line_end":38,"column_start":5,"column_end":67}},{"value":"/ capture group (counted by order of opening parenthesis where `\\0` is the","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71327,"byte_end":71403,"line_start":39,"line_end":39,"column_start":5,"column_end":81}},{"value":"/ entire match) or it can be a name (consisting of letters, digits or","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71408,"byte_end":71479,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ underscores) corresponding to a named capture group.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71484,"byte_end":71540,"line_start":41,"line_end":41,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71545,"byte_end":71548,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ `num` must be an integer corresponding to the index of the","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71553,"byte_end":71615,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"/ capture group.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71620,"byte_end":71638,"line_start":44,"line_end":44,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71643,"byte_end":71646,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ If `num` or `name` isn't a valid capture group (whether the name doesn't exist","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71651,"byte_end":71733,"line_start":46,"line_end":46,"column_start":5,"column_end":87}},{"value":"/ or isn't a valid index), then it is replaced with the empty string.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71738,"byte_end":71809,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71814,"byte_end":71817,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The longest possible number is used. e.g., `\\10` looks up capture","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71822,"byte_end":71891,"line_start":49,"line_end":49,"column_start":5,"column_end":74}},{"value":"/ group 10 and not capture group 1 followed by a literal 0.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71896,"byte_end":71957,"line_start":50,"line_end":50,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71962,"byte_end":71965,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ To write a literal `\\`, use `\\\\`.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":71970,"byte_end":72007,"line_start":52,"line_end":52,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":72650,"byte_end":72655,"line_start":69,"line_end":69,"column_start":12,"column_end":17},"name":"check","qualname":"<Expander>::check","value":"pub fn check(&Self, &str, &Regex) -> crate::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Checks `template` for errors.  The following conditions are checked for:","sig":null,"attributes":[{"value":"/ Checks `template` for errors.  The following conditions are checked for:","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":72201,"byte_end":72277,"line_start":62,"line_end":62,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":72282,"byte_end":72285,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ - A reference to a numbered group that does not exist in `regex`","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":72290,"byte_end":72358,"line_start":64,"line_end":64,"column_start":5,"column_end":73}},{"value":"/ - A reference to a numbered group (other than 0) when `regex` contains named groups","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":72363,"byte_end":72450,"line_start":65,"line_end":65,"column_start":5,"column_end":92}},{"value":"/ - A reference to a named group that does not occur in `regex`","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":72455,"byte_end":72520,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/ - An opening group name delimiter without a closing delimiter","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":72525,"byte_end":72590,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ - Using an empty string as a group name","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":72595,"byte_end":72638,"line_start":68,"line_end":68,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":73897,"byte_end":73902,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"quote","qualname":"<Expander>::quote","value":"pub fn quote<'a>(&Self, &'a str) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Quotes the substitution character in `text` so it appears literally\n in the output of `expansion`.","sig":null,"attributes":[{"value":"/ Quotes the substitution character in `text` so it appears literally","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":73598,"byte_end":73669,"line_start":97,"line_end":97,"column_start":5,"column_end":76}},{"value":"/ in the output of `expansion`.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":73674,"byte_end":73707,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":73712,"byte_end":73715,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":73720,"byte_end":73727,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":73732,"byte_end":73747,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/     fancy_regex::Expander::default().quote(\"Has a literal $ sign.\"),","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":73752,"byte_end":73824,"line_start":102,"line_end":102,"column_start":5,"column_end":77}},{"value":"/     \"Has a literal $$ sign.\",","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":73829,"byte_end":73862,"line_start":103,"line_end":103,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":73867,"byte_end":73873,"line_start":104,"line_end":104,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":73878,"byte_end":73885,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":74436,"byte_end":74445,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"expansion","qualname":"<Expander>::expansion","value":"pub fn expansion(&Self, &str, &Captures) -> String","parent":null,"children":[],"decl_id":null,"docs":" Expands the template string `template` using the syntax defined\n by this expander and the values of capture groups from `captures`.\n","sig":null,"attributes":[{"value":"/ Expands the template string `template` using the syntax defined","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":74282,"byte_end":74349,"line_start":117,"line_end":117,"column_start":5,"column_end":72}},{"value":"/ by this expander and the values of capture groups from `captures`.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":74354,"byte_end":74424,"line_start":118,"line_end":118,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":74955,"byte_end":74971,"line_start":128,"line_end":128,"column_start":12,"column_end":28},"name":"append_expansion","qualname":"<Expander>::append_expansion","value":"pub fn append_expansion(&Self, &mut String, &str, &Captures)","parent":null,"children":[],"decl_id":null,"docs":" Appends the expansion produced by `expansion` to `dst`.  Potentially more efficient\n than calling `expansion` directly and appending to an existing string.\n","sig":null,"attributes":[{"value":"/ Appends the expansion produced by `expansion` to `dst`.  Potentially more efficient","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":74777,"byte_end":74864,"line_start":126,"line_end":126,"column_start":5,"column_end":92}},{"value":"/ than calling `expansion` directly and appending to an existing string.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":74869,"byte_end":74943,"line_start":127,"line_end":127,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":75564,"byte_end":75579,"line_start":139,"line_end":139,"column_start":12,"column_end":27},"name":"write_expansion","qualname":"<Expander>::write_expansion","value":"pub fn write_expansion<impl io::Write: io::Write>(&Self, impl io::Write, &str,\n                                                  &Captures) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the expansion produced by `expansion` to `dst`.  Potentially more efficient\n than calling `expansion` directly and writing the result.\n","sig":null,"attributes":[{"value":"/ Writes the expansion produced by `expansion` to `dst`.  Potentially more efficient","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":75400,"byte_end":75486,"line_start":137,"line_end":137,"column_start":5,"column_end":91}},{"value":"/ than calling `expansion` directly and writing the result.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":75491,"byte_end":75552,"line_start":138,"line_end":138,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\parse.rs","byte_start":79656,"byte_end":79664,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"ExprTree","qualname":"::parse::ExprTree","value":"ExprTree { expr, backrefs, named_groups }","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\parse.rs","byte_start":79675,"byte_end":79679,"line_start":47,"line_end":47,"column_start":9,"column_end":13},"name":"expr","qualname":"::parse::ExprTree::expr","value":"Expr","parent":{"krate":0,"index":409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\parse.rs","byte_start":79695,"byte_end":79703,"line_start":48,"line_end":48,"column_start":9,"column_end":17},"name":"backrefs","qualname":"::parse::ExprTree::backrefs","value":"bit_set::BitSet","parent":{"krate":0,"index":409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\parse.rs","byte_start":79721,"byte_end":79733,"line_start":49,"line_end":49,"column_start":9,"column_end":21},"name":"named_groups","qualname":"::parse::ExprTree::named_groups","value":"std::collections::HashMap<std::string::String, usize>","parent":{"krate":0,"index":409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123188,"byte_end":123191,"line_start":90,"line_end":90,"column_start":5,"column_end":8},"name":"End","qualname":"::vm::Insn::End","value":"Insn::End","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Successful end of program\n","sig":null,"attributes":[{"value":"/ Successful end of program","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123154,"byte_end":123183,"line_start":89,"line_end":89,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123245,"byte_end":123248,"line_start":92,"line_end":92,"column_start":5,"column_end":8},"name":"Any","qualname":"::vm::Insn::Any","value":"Insn::Any","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Match any character (including newline)\n","sig":null,"attributes":[{"value":"/ Match any character (including newline)","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123197,"byte_end":123240,"line_start":91,"line_end":91,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123306,"byte_end":123313,"line_start":94,"line_end":94,"column_start":5,"column_end":12},"name":"AnyNoNL","qualname":"::vm::Insn::AnyNoNL","value":"Insn::AnyNoNL","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Match any character (not including newline)\n","sig":null,"attributes":[{"value":"/ Match any character (not including newline)","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123254,"byte_end":123301,"line_start":93,"line_end":93,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123373,"byte_end":123376,"line_start":96,"line_end":96,"column_start":5,"column_end":8},"name":"Lit","qualname":"::vm::Insn::Lit","value":"Insn::Lit(String)","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Match the literal string at the current index\n","sig":null,"attributes":[{"value":"/ Match the literal string at the current index","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123319,"byte_end":123368,"line_start":95,"line_end":95,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123589,"byte_end":123594,"line_start":99,"line_end":99,"column_start":5,"column_end":10},"name":"Split","qualname":"::vm::Insn::Split","value":"Insn::Split(usize, usize)","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Split execution into two threads. The two fields are positions of instructions. Execution\n first tries the first thread. If that fails, the second position is tried.\n","sig":null,"attributes":[{"value":"/ Split execution into two threads. The two fields are positions of instructions. Execution","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123408,"byte_end":123501,"line_start":97,"line_end":97,"column_start":5,"column_end":98}},{"value":"/ first tries the first thread. If that fails, the second position is tried.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123506,"byte_end":123584,"line_start":98,"line_end":98,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123654,"byte_end":123657,"line_start":101,"line_end":101,"column_start":5,"column_end":8},"name":"Jmp","qualname":"::vm::Insn::Jmp","value":"Insn::Jmp(usize)","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Jump to instruction at position\n","sig":null,"attributes":[{"value":"/ Jump to instruction at position","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123614,"byte_end":123649,"line_start":100,"line_end":100,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123732,"byte_end":123736,"line_start":103,"line_end":103,"column_start":5,"column_end":9},"name":"Save","qualname":"::vm::Insn::Save","value":"Insn::Save(usize)","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Save the current string index into the specified slot\n","sig":null,"attributes":[{"value":"/ Save the current string index into the specified slot","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123670,"byte_end":123727,"line_start":102,"line_end":102,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123790,"byte_end":123795,"line_start":105,"line_end":105,"column_start":5,"column_end":10},"name":"Save0","qualname":"::vm::Insn::Save0","value":"Insn::Save0(usize)","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Save `0` into the specified slot\n","sig":null,"attributes":[{"value":"/ Save `0` into the specified slot","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123749,"byte_end":123785,"line_start":104,"line_end":104,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123887,"byte_end":123894,"line_start":107,"line_end":107,"column_start":5,"column_end":12},"name":"Restore","qualname":"::vm::Insn::Restore","value":"Insn::Restore(usize)","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Set the string index to the value that was saved in the specified slot\n","sig":null,"attributes":[{"value":"/ Set the string index to the value that was saved in the specified slot","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123808,"byte_end":123882,"line_start":106,"line_end":106,"column_start":5,"column_end":79}}]},{"kind":"StructVariant","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123959,"byte_end":123967,"line_start":109,"line_end":109,"column_start":5,"column_end":13},"name":"RepeatGr","qualname":"::vm::Insn::RepeatGr","value":"Insn::RepeatGr { lo, hi, next, repeat }","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Repeat greedily (match as much as possible)\n","sig":null,"attributes":[{"value":"/ Repeat greedily (match as much as possible)","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123907,"byte_end":123954,"line_start":108,"line_end":108,"column_start":5,"column_end":52}}]},{"kind":"StructVariant","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":124320,"byte_end":124328,"line_start":120,"line_end":120,"column_start":5,"column_end":13},"name":"RepeatNg","qualname":"::vm::Insn::RepeatNg","value":"Insn::RepeatNg { lo, hi, next, repeat }","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Repeat non-greedily (prefer matching as little as possible)\n","sig":null,"attributes":[{"value":"/ Repeat non-greedily (prefer matching as little as possible)","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":124252,"byte_end":124315,"line_start":119,"line_end":119,"column_start":5,"column_end":68}}]},{"kind":"StructVariant","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":124683,"byte_end":124698,"line_start":131,"line_end":131,"column_start":5,"column_end":20},"name":"RepeatEpsilonGr","qualname":"::vm::Insn::RepeatEpsilonGr","value":"Insn::RepeatEpsilonGr { lo, next, repeat, check }","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Repeat greedily and prevent infinite loops from empty matches\n","sig":null,"attributes":[{"value":"/ Repeat greedily and prevent infinite loops from empty matches","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":124613,"byte_end":124678,"line_start":130,"line_end":130,"column_start":5,"column_end":70}}]},{"kind":"StructVariant","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":125104,"byte_end":125119,"line_start":142,"line_end":142,"column_start":5,"column_end":20},"name":"RepeatEpsilonNg","qualname":"::vm::Insn::RepeatEpsilonNg","value":"Insn::RepeatEpsilonNg { lo, next, repeat, check }","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Repeat non-greedily and prevent infinite loops from empty matches\n","sig":null,"attributes":[{"value":"/ Repeat non-greedily and prevent infinite loops from empty matches","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":125030,"byte_end":125099,"line_start":141,"line_end":141,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":125487,"byte_end":125509,"line_start":153,"line_end":153,"column_start":5,"column_end":27},"name":"FailNegativeLookAround","qualname":"::vm::Insn::FailNegativeLookAround","value":"Insn::FailNegativeLookAround","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Negative look-around failed\n","sig":null,"attributes":[{"value":"/ Negative look-around failed","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":125451,"byte_end":125482,"line_start":152,"line_end":152,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":125573,"byte_end":125579,"line_start":155,"line_end":155,"column_start":5,"column_end":11},"name":"GoBack","qualname":"::vm::Insn::GoBack","value":"Insn::GoBack(usize)","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Set IX back by the specified number of characters\n","sig":null,"attributes":[{"value":"/ Set IX back by the specified number of characters","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":125515,"byte_end":125568,"line_start":154,"line_end":154,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":125642,"byte_end":125649,"line_start":157,"line_end":157,"column_start":5,"column_end":12},"name":"Backref","qualname":"::vm::Insn::Backref","value":"Insn::Backref(usize)","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Back reference to a group number to check\n","sig":null,"attributes":[{"value":"/ Back reference to a group number to check","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":125592,"byte_end":125637,"line_start":156,"line_end":156,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":125692,"byte_end":125703,"line_start":159,"line_end":159,"column_start":5,"column_end":16},"name":"BeginAtomic","qualname":"::vm::Insn::BeginAtomic","value":"Insn::BeginAtomic","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Begin of atomic group\n","sig":null,"attributes":[{"value":"/ Begin of atomic group","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":125662,"byte_end":125687,"line_start":158,"line_end":158,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":125737,"byte_end":125746,"line_start":161,"line_end":161,"column_start":5,"column_end":14},"name":"EndAtomic","qualname":"::vm::Insn::EndAtomic","value":"Insn::EndAtomic","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" End of atomic group\n","sig":null,"attributes":[{"value":"/ End of atomic group","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":125709,"byte_end":125732,"line_start":160,"line_end":160,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":125814,"byte_end":125827,"line_start":163,"line_end":163,"column_start":5,"column_end":18},"name":"DelegateSized","qualname":"::vm::Insn::DelegateSized","value":"Insn::DelegateSized(Box<Regex>, usize)","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Delegate matching to the regex crate for a fixed size\n","sig":null,"attributes":[{"value":"/ Delegate matching to the regex crate for a fixed size","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":125752,"byte_end":125809,"line_start":162,"line_end":162,"column_start":5,"column_end":62}}]},{"kind":"StructVariant","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":125897,"byte_end":125905,"line_start":165,"line_end":165,"column_start":5,"column_end":13},"name":"Delegate","qualname":"::vm::Insn::Delegate","value":"Insn::Delegate { inner, inner1, start_group, end_group }","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Delegate matching to the regex crate\n","sig":null,"attributes":[{"value":"/ Delegate matching to the regex crate","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":125852,"byte_end":125892,"line_start":164,"line_end":164,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123143,"byte_end":123147,"line_start":88,"line_end":88,"column_start":10,"column_end":14},"name":"Insn","qualname":"::vm::Insn","value":"pub enum Insn {\n\n    /// Successful end of program\n    End,\n\n    /// Match any character (including newline)\n    Any,\n\n    /// Match any character (not including newline)\n    AnyNoNL,\n\n    /// Match the literal string at the current index\n    Lit(String),\n\n    /// Split execution into two threads. The two fields are positions of instructions. Execution\n    /// first tries the first thread. If that fails, the second position is tried.\n    Split(usize, usize),\n\n    /// Jump to instruction at position\n    Jmp(usize),\n\n    /// Save the current string index into the specified slot\n    Save(usize),\n\n    /// Save `0` into the specified slot\n    Save0(usize),\n\n    /// Set the string index to the value that was saved in the specified slot\n    Restore(usize),\n\n    /// Repeat greedily (match as much as possible)\n    RepeatGr {\n        /// Minimum number of matches\n        lo: usize,\n        /// Maximum number of matches\n        hi: usize,\n        /// The instruction after the repeat\n        next: usize,\n        /// The slot for keeping track of the number of repetitions\n        repeat: usize,\n    },\n\n    /// Repeat non-greedily (prefer matching as little as possible)\n    RepeatNg {\n        /// Minimum number of matches\n        lo: usize,\n        /// Maximum number of matches\n        hi: usize,\n        /// The instruction after the repeat\n        next: usize,\n        /// The slot for keeping track of the number of repetitions\n        repeat: usize,\n    },\n\n    /// Repeat greedily and prevent infinite loops from empty matches\n    RepeatEpsilonGr {\n        /// Minimum number of matches\n        lo: usize,\n        /// The instruction after the repeat\n        next: usize,\n        /// The slot for keeping track of the number of repetitions\n        repeat: usize,\n        /// The slot for saving the previous IX to check if we had an empty match\n        check: usize,\n    },\n\n    /// Repeat non-greedily and prevent infinite loops from empty matches\n    RepeatEpsilonNg {\n        /// Minimum number of matches\n        lo: usize,\n        /// The instruction after the repeat\n        next: usize,\n        /// The slot for keeping track of the number of repetitions\n        repeat: usize,\n        /// The slot for saving the previous IX to check if we had an empty match\n        check: usize,\n    },\n\n    /// Negative look-around failed\n    FailNegativeLookAround,\n\n    /// Set IX back by the specified number of characters\n    GoBack(usize),\n\n    /// Back reference to a group number to check\n    Backref(usize),\n\n    /// Begin of atomic group\n    BeginAtomic,\n\n    /// End of atomic group\n    EndAtomic,\n\n    /// Delegate matching to the regex crate for a fixed size\n    DelegateSized(Box<Regex>, usize),\n\n    /// Delegate matching to the regex crate\n    Delegate {\n        /// The regex\n        inner: Box<Regex>,\n        /// The same regex but matching an additional character on the left.\n        ///\n        /// E.g. if `inner` is `^\\b`, `inner1` is `^(?s:.)\\b`. Why do we need this? Because `\\b`\n        /// needs to know the previous character to work correctly. Let's say we're currently at the\n        /// second character of the string `xy`. Should `\\b` match there? No. But if we'd run `^\\b`\n        /// against `y`, it would match (incorrect). To do the right thing, we run `^(?s:.)\\b`\n        /// against `xy`, which does not match.\n        ///\n        /// We only need this for regexes that \"look left\", i.e. need to know what the previous\n        /// character was.\n        inner1: Option<Box<Regex>>,\n        /// The first group number that this regex captures (if it contains groups)\n        start_group: usize,\n        /// The last group number\n        end_group: usize,\n    },\n}","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":457},{"krate":0,"index":462},{"krate":0,"index":467},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":488}],"decl_id":null,"docs":" Instruction of the VM.\n","sig":null,"attributes":[{"value":"/ Instruction of the VM.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":123090,"byte_end":123116,"line_start":86,"line_end":86,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":126920,"byte_end":126924,"line_start":188,"line_end":188,"column_start":12,"column_end":16},"name":"Prog","qualname":"::vm::Prog","value":"Prog { body }","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497}],"decl_id":null,"docs":" Sequence of instructions for the VM to execute.\n","sig":null,"attributes":[{"value":"/ Sequence of instructions for the VM to execute.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":126840,"byte_end":126891,"line_start":186,"line_end":186,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":126971,"byte_end":126975,"line_start":190,"line_end":190,"column_start":9,"column_end":13},"name":"body","qualname":"::vm::Prog::body","value":"std::vec::Vec<vm::Insn>","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":" Instructions of the program\n","sig":null,"attributes":[{"value":"/ Instructions of the program","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":126931,"byte_end":126962,"line_start":189,"line_end":189,"column_start":5,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":133893,"byte_end":133902,"line_start":402,"line_end":402,"column_start":8,"column_end":17},"name":"run_trace","qualname":"::vm::run_trace","value":"pub fn run_trace(&Prog, &str, usize) -> Result<Option<Vec<usize>>>","parent":null,"children":[],"decl_id":null,"docs":" Run the program with trace printing for debugging.\n","sig":null,"attributes":[{"value":"/ Run the program with trace printing for debugging.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":133831,"byte_end":133885,"line_start":401,"line_end":401,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":134083,"byte_end":134094,"line_start":407,"line_end":407,"column_start":8,"column_end":19},"name":"run_default","qualname":"::vm::run_default","value":"pub fn run_default(&Prog, &str, usize) -> Result<Option<Vec<usize>>>","parent":null,"children":[],"decl_id":null,"docs":" Run the program with default options.\n","sig":null,"attributes":[{"value":"/ Run the program with default options.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":134034,"byte_end":134075,"line_start":406,"line_end":406,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":5218,"byte_end":5230,"line_start":175,"line_end":175,"column_start":12,"column_end":24},"name":"RegexBuilder","qualname":"::RegexBuilder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A builder for a `Regex` to allow configuring options.\n","sig":null,"attributes":[{"value":"/ A builder for a `Regex` to allow configuring options.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":5132,"byte_end":5189,"line_start":173,"line_end":173,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":5293,"byte_end":5298,"line_start":178,"line_end":178,"column_start":12,"column_end":17},"name":"Regex","qualname":"::Regex","value":"Regex {  }","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" A compiled regular expression.\n","sig":null,"attributes":[{"value":"/ A compiled regular expression.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":5247,"byte_end":5281,"line_start":177,"line_end":177,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":5778,"byte_end":5783,"line_start":199,"line_end":199,"column_start":12,"column_end":17},"name":"Match","qualname":"::Match","value":"Match {  }","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520}],"decl_id":null,"docs":" A single match of a regex or group in an input text\n","sig":null,"attributes":[{"value":"/ A single match of a regex or group in an input text","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":5666,"byte_end":5721,"line_start":197,"line_end":197,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":5921,"byte_end":5929,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"Captures","qualname":"::Captures","value":"Captures {  }","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543}],"decl_id":null,"docs":" A set of capture groups found for a regex.\n","sig":null,"attributes":[{"value":"/ A set of capture groups found for a regex.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":5846,"byte_end":5892,"line_start":205,"line_end":205,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":6307,"byte_end":6324,"line_start":226,"line_end":226,"column_start":12,"column_end":29},"name":"SubCaptureMatches","qualname":"::SubCaptureMatches","value":"SubCaptureMatches {  }","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562}],"decl_id":null,"docs":" Iterator for captured groups in order in which they appear in the regex.\n","sig":null,"attributes":[{"value":"/ Iterator for captured groups in order in which they appear in the regex.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":6202,"byte_end":6278,"line_start":224,"line_end":224,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":6989,"byte_end":6992,"line_start":254,"line_end":254,"column_start":12,"column_end":15},"name":"new","qualname":"<RegexBuilder>::new","value":"pub fn new(&str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new regex builder with a regex pattern.","sig":null,"attributes":[{"value":"/ Create a new regex builder with a regex pattern.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":6845,"byte_end":6897,"line_start":251,"line_end":251,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":6902,"byte_end":6905,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ If the pattern is invalid, the call to `build` will fail later.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":6910,"byte_end":6977,"line_start":253,"line_end":253,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":7283,"byte_end":7288,"line_start":263,"line_end":263,"column_start":12,"column_end":17},"name":"build","qualname":"<RegexBuilder>::build","value":"pub fn build(&Self) -> Result<Regex>","parent":null,"children":[],"decl_id":null,"docs":" Build the `Regex`.","sig":null,"attributes":[{"value":"/ Build the `Regex`.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":7159,"byte_end":7181,"line_start":260,"line_end":260,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":7186,"byte_end":7189,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Returns an [`Error`](enum.Error.html) if the pattern could not be parsed.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":7194,"byte_end":7271,"line_start":262,"line_end":262,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":7791,"byte_end":7806,"line_start":273,"line_end":273,"column_start":12,"column_end":27},"name":"backtrack_limit","qualname":"<RegexBuilder>::backtrack_limit","value":"pub fn backtrack_limit(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Limit for how many times backtracking should be attempted for fancy regexes (where\n backtracking is used). If this limit is exceeded, execution returns an error with\n [`Error::BacktrackLimitExceeded`](enum.Error.html#variant.BacktrackLimitExceeded).\n This is for preventing a regex with catastrophic backtracking to run for too long.","sig":null,"attributes":[{"value":"/ Limit for how many times backtracking should be attempted for fancy regexes (where","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":7369,"byte_end":7455,"line_start":267,"line_end":267,"column_start":5,"column_end":91}},{"value":"/ backtracking is used). If this limit is exceeded, execution returns an error with","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":7460,"byte_end":7545,"line_start":268,"line_end":268,"column_start":5,"column_end":90}},{"value":"/ [`Error::BacktrackLimitExceeded`](enum.Error.html#variant.BacktrackLimitExceeded).","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":7550,"byte_end":7636,"line_start":269,"line_end":269,"column_start":5,"column_end":91}},{"value":"/ This is for preventing a regex with catastrophic backtracking to run for too long.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":7641,"byte_end":7727,"line_start":270,"line_end":270,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":7732,"byte_end":7735,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Default is `1_000_000` (1 million).","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":7740,"byte_end":7779,"line_start":272,"line_end":272,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":8292,"byte_end":8311,"line_start":283,"line_end":283,"column_start":12,"column_end":31},"name":"delegate_size_limit","qualname":"<RegexBuilder>::delegate_size_limit","value":"pub fn delegate_size_limit(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the approximate size limit of the compiled regular expression.","sig":null,"attributes":[{"value":"/ Set the approximate size limit of the compiled regular expression.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":7911,"byte_end":7981,"line_start":278,"line_end":278,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":7986,"byte_end":7989,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This option is forwarded from the wrapped `regex` crate. Note that depending on the used","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":7994,"byte_end":8086,"line_start":280,"line_end":280,"column_start":5,"column_end":97}},{"value":"/ regex features there may be multiple delegated sub-regexes fed to the `regex` crate. As","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":8091,"byte_end":8182,"line_start":281,"line_end":281,"column_start":5,"column_end":96}},{"value":"/ such the actual limit is closer to `<number of delegated regexes> * delegate_size_limit`.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":8187,"byte_end":8280,"line_start":282,"line_end":282,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":8807,"byte_end":8830,"line_start":294,"line_end":294,"column_start":12,"column_end":35},"name":"delegate_dfa_size_limit","qualname":"<RegexBuilder>::delegate_dfa_size_limit","value":"pub fn delegate_dfa_size_limit(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the approximate size of the cache used by the DFA.","sig":null,"attributes":[{"value":"/ Set the approximate size of the cache used by the DFA.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":8426,"byte_end":8484,"line_start":288,"line_end":288,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":8489,"byte_end":8492,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This option is forwarded from the wrapped `regex` crate. Note that depending on the used","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":8497,"byte_end":8589,"line_start":290,"line_end":290,"column_start":5,"column_end":97}},{"value":"/ regex features there may be multiple delegated sub-regexes fed to the `regex` crate. As","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":8594,"byte_end":8685,"line_start":291,"line_end":291,"column_start":5,"column_end":96}},{"value":"/ such the actual limit is closer to `<number of delegated regexes> *","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":8690,"byte_end":8761,"line_start":292,"line_end":292,"column_start":5,"column_end":76}},{"value":"/ delegate_dfa_size_limit`.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":8766,"byte_end":8795,"line_start":293,"line_end":293,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":9323,"byte_end":9326,"line_start":311,"line_end":311,"column_start":12,"column_end":15},"name":"new","qualname":"<Regex>::new","value":"pub fn new(&str) -> Result<Regex>","parent":null,"children":[],"decl_id":null,"docs":" Parse and compile a regex with default options, see `RegexBuilder`.","sig":null,"attributes":[{"value":"/ Parse and compile a regex with default options, see `RegexBuilder`.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":9150,"byte_end":9221,"line_start":308,"line_end":308,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":9226,"byte_end":9229,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ Returns an [`Error`](enum.Error.html) if the pattern could not be parsed.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":9234,"byte_end":9311,"line_start":310,"line_end":310,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":11403,"byte_end":11409,"line_start":373,"line_end":373,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Regex>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original string of this regex.\n","sig":null,"attributes":[{"value":"/ Returns the original string of this regex.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":11345,"byte_end":11391,"line_start":372,"line_end":372,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":11952,"byte_end":11960,"line_start":392,"line_end":392,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Regex>::is_match","value":"pub fn is_match(&Self, &str) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Check if the regex matches the input text.","sig":null,"attributes":[{"value":"/ Check if the regex matches the input text.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":11607,"byte_end":11653,"line_start":380,"line_end":380,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":11658,"byte_end":11661,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":11666,"byte_end":11679,"line_start":382,"line_end":382,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":11684,"byte_end":11687,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ Test if some text contains the same word twice:","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":11692,"byte_end":11743,"line_start":384,"line_end":384,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":11748,"byte_end":11751,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":11756,"byte_end":11767,"line_start":386,"line_end":386,"column_start":5,"column_end":16}},{"value":"/ # use fancy_regex::Regex;","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":11772,"byte_end":11801,"line_start":387,"line_end":387,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":11806,"byte_end":11809,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ let re = Regex::new(r\"(\\w+) \\1\").unwrap();","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":11814,"byte_end":11860,"line_start":389,"line_end":389,"column_start":5,"column_end":51}},{"value":"/ assert!(re.is_match(\"mirror mirror on the wall\").unwrap());","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":11865,"byte_end":11928,"line_start":390,"line_end":390,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":11933,"byte_end":11940,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":12807,"byte_end":12811,"line_start":419,"line_end":419,"column_start":12,"column_end":16},"name":"find","qualname":"<Regex>::find","value":"pub fn find<'t>(&Self, &'t str) -> Result<Option<Match>>","parent":null,"children":[],"decl_id":null,"docs":" Find the first match in the input text.","sig":null,"attributes":[{"value":"/ Find the first match in the input text.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":12327,"byte_end":12370,"line_start":404,"line_end":404,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":12375,"byte_end":12378,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ If you have capturing groups in your regex that you want to extract, use the [captures()]","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":12383,"byte_end":12476,"line_start":406,"line_end":406,"column_start":5,"column_end":98}},{"value":"/ method.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":12481,"byte_end":12492,"line_start":407,"line_end":407,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":12497,"byte_end":12500,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":12505,"byte_end":12518,"line_start":409,"line_end":409,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":12523,"byte_end":12526,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ Find a word that is followed by an exclamation point:","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":12531,"byte_end":12588,"line_start":411,"line_end":411,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":12593,"byte_end":12596,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":12601,"byte_end":12612,"line_start":413,"line_end":413,"column_start":5,"column_end":16}},{"value":"/ # use fancy_regex::Regex;","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":12617,"byte_end":12646,"line_start":414,"line_end":414,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":12651,"byte_end":12654,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ let re = Regex::new(r\"\\w+(?=!)\").unwrap();","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":12659,"byte_end":12705,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(re.find(\"so fancy!\").unwrap().unwrap().as_str(), \"fancy\");","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":12710,"byte_end":12783,"line_start":417,"line_end":417,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":12788,"byte_end":12795,"line_start":418,"line_end":418,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14023,"byte_end":14031,"line_start":451,"line_end":451,"column_start":12,"column_end":20},"name":"captures","qualname":"<Regex>::captures","value":"pub fn captures<'t>(&Self, &'t str) -> Result<Option<Captures>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the capture groups for the first match in `text`.","sig":null,"attributes":[{"value":"/ Returns the capture groups for the first match in `text`.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":13278,"byte_end":13339,"line_start":431,"line_end":431,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":13344,"byte_end":13347,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ If no match is found, then `Ok(None)` is returned.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":13352,"byte_end":13406,"line_start":433,"line_end":433,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":13411,"byte_end":13414,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":13419,"byte_end":13433,"line_start":435,"line_end":435,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":13438,"byte_end":13441,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ Finding matches and capturing parts of the match:","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":13446,"byte_end":13499,"line_start":437,"line_end":437,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":13504,"byte_end":13507,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":13512,"byte_end":13523,"line_start":439,"line_end":439,"column_start":5,"column_end":16}},{"value":"/ # use fancy_regex::Regex;","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":13528,"byte_end":13557,"line_start":440,"line_end":440,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":13562,"byte_end":13565,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ let re = Regex::new(r\"(\\d{4})-(\\d{2})-(\\d{2})\").unwrap();","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":13570,"byte_end":13631,"line_start":442,"line_end":442,"column_start":5,"column_end":66}},{"value":"/ let text = \"The date was 2018-04-07\";","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":13636,"byte_end":13677,"line_start":443,"line_end":443,"column_start":5,"column_end":46}},{"value":"/ let captures = re.captures(text).unwrap().unwrap();","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":13682,"byte_end":13737,"line_start":444,"line_end":444,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":13742,"byte_end":13745,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(captures.get(1).unwrap().as_str(), \"2018\");","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":13750,"byte_end":13808,"line_start":446,"line_end":446,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(captures.get(2).unwrap().as_str(), \"04\");","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":13813,"byte_end":13869,"line_start":447,"line_end":447,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(captures.get(3).unwrap().as_str(), \"07\");","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":13874,"byte_end":13930,"line_start":448,"line_end":448,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(captures.get(0).unwrap().as_str(), \"2018-04-07\");","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":13935,"byte_end":13999,"line_start":449,"line_end":449,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14004,"byte_end":14011,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":15362,"byte_end":15379,"line_start":489,"line_end":489,"column_start":12,"column_end":29},"name":"captures_from_pos","qualname":"<Regex>::captures_from_pos","value":"pub fn captures_from_pos<'t>(&Self, &'t str, usize)\n-> Result<Option<Captures>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the capture groups for the first match in `text`, starting from\n the specified byte position `pos`.","sig":null,"attributes":[{"value":"/ Returns the capture groups for the first match in `text`, starting from","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14143,"byte_end":14218,"line_start":455,"line_end":455,"column_start":5,"column_end":80}},{"value":"/ the specified byte position `pos`.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14223,"byte_end":14261,"line_start":456,"line_end":456,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14266,"byte_end":14269,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14274,"byte_end":14288,"line_start":458,"line_end":458,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14293,"byte_end":14296,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ Finding captures starting at a position:","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14301,"byte_end":14345,"line_start":460,"line_end":460,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14350,"byte_end":14353,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14358,"byte_end":14365,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"/ # use fancy_regex::Regex;","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14370,"byte_end":14399,"line_start":463,"line_end":463,"column_start":5,"column_end":34}},{"value":"/ let re = Regex::new(r\"(?m:^)(\\d+)\").unwrap();","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14404,"byte_end":14453,"line_start":464,"line_end":464,"column_start":5,"column_end":54}},{"value":"/ let text = \"1 test 123\\n2 foo\";","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14458,"byte_end":14493,"line_start":465,"line_end":465,"column_start":5,"column_end":40}},{"value":"/ let captures = re.captures_from_pos(text, 7).unwrap().unwrap();","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14498,"byte_end":14565,"line_start":466,"line_end":466,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14570,"byte_end":14573,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ let group = captures.get(1).unwrap();","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14578,"byte_end":14619,"line_start":468,"line_end":468,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(group.as_str(), \"2\");","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14624,"byte_end":14660,"line_start":469,"line_end":469,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(group.start(), 11);","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14665,"byte_end":14699,"line_start":470,"line_end":470,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(group.end(), 12);","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14704,"byte_end":14736,"line_start":471,"line_end":471,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14741,"byte_end":14748,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14753,"byte_end":14756,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ Note that in some cases this is not the same as using the `captures`","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14761,"byte_end":14833,"line_start":474,"line_end":474,"column_start":5,"column_end":77}},{"value":"/ methods and passing a slice of the string, see the capture that we get","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14838,"byte_end":14912,"line_start":475,"line_end":475,"column_start":5,"column_end":79}},{"value":"/ when we do this:","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14917,"byte_end":14937,"line_start":476,"line_end":476,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14942,"byte_end":14945,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14950,"byte_end":14957,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # use fancy_regex::Regex;","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14962,"byte_end":14991,"line_start":479,"line_end":479,"column_start":5,"column_end":34}},{"value":"/ let re = Regex::new(r\"(?m:^)(\\d+)\").unwrap();","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":14996,"byte_end":15045,"line_start":480,"line_end":480,"column_start":5,"column_end":54}},{"value":"/ let text = \"1 test 123\\n2 foo\";","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":15050,"byte_end":15085,"line_start":481,"line_end":481,"column_start":5,"column_end":40}},{"value":"/ let captures = re.captures(&text[7..]).unwrap().unwrap();","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":15090,"byte_end":15151,"line_start":482,"line_end":482,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(captures.get(1).unwrap().as_str(), \"123\");","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":15156,"byte_end":15213,"line_start":483,"line_end":483,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":15218,"byte_end":15225,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":15230,"byte_end":15233,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ This matched the number \"123\" because it's at the beginning of the text","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":15238,"byte_end":15313,"line_start":486,"line_end":486,"column_start":5,"column_end":80}},{"value":"/ of the string slice.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":15318,"byte_end":15342,"line_start":487,"line_end":487,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":15347,"byte_end":15350,"line_start":488,"line_end":488,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":16526,"byte_end":16538,"line_start":519,"line_end":519,"column_start":12,"column_end":24},"name":"captures_len","qualname":"<Regex>::captures_len","value":"pub fn captures_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of captures, including the implicit capture of the entire expression.\n","sig":null,"attributes":[{"value":"/ Returns the number of captures, including the implicit capture of the entire expression.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":16422,"byte_end":16514,"line_start":518,"line_end":518,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":16792,"byte_end":16805,"line_start":527,"line_end":527,"column_start":12,"column_end":25},"name":"capture_names","qualname":"<Regex>::capture_names","value":"pub fn capture_names(&Self) -> CaptureNames","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the capture names.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the capture names.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":16733,"byte_end":16780,"line_start":526,"line_end":526,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":17126,"byte_end":17137,"line_start":538,"line_end":538,"column_start":12,"column_end":23},"name":"debug_print","qualname":"<Regex>::debug_print","value":"pub fn debug_print(&Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":17450,"byte_end":17455,"line_start":549,"line_end":549,"column_start":12,"column_end":17},"name":"start","qualname":"<Match>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting byte offset of the match in the text.\n","sig":null,"attributes":[{"value":"/ Returns the starting byte offset of the match in the text.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":17362,"byte_end":17424,"line_start":547,"line_end":547,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":17429,"byte_end":17438,"line_start":548,"line_end":548,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":17590,"byte_end":17593,"line_start":555,"line_end":555,"column_start":12,"column_end":15},"name":"end","qualname":"<Match>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the ending byte offset of the match in the text.\n","sig":null,"attributes":[{"value":"/ Returns the ending byte offset of the match in the text.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":17504,"byte_end":17564,"line_start":553,"line_end":553,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":17569,"byte_end":17578,"line_start":554,"line_end":554,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":17751,"byte_end":17756,"line_start":561,"line_end":561,"column_start":12,"column_end":17},"name":"range","qualname":"<Match>::range","value":"pub fn range(&Self) -> Range<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the range over the starting and ending byte offsets of the match in text.\n","sig":null,"attributes":[{"value":"/ Returns the range over the starting and ending byte offsets of the match in text.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":17640,"byte_end":17725,"line_start":559,"line_end":559,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":17730,"byte_end":17739,"line_start":560,"line_end":560,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":17877,"byte_end":17883,"line_start":567,"line_end":567,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Match>::as_str","value":"pub fn as_str(&Self) -> &'t str","parent":null,"children":[],"decl_id":null,"docs":" Returns the matched text.\n","sig":null,"attributes":[{"value":"/ Returns the matched text.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":17822,"byte_end":17851,"line_start":565,"line_end":565,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":17856,"byte_end":17865,"line_start":566,"line_end":566,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":18665,"byte_end":18668,"line_start":595,"line_end":595,"column_start":12,"column_end":15},"name":"get","qualname":"<Captures>::get","value":"pub fn get(&Self, usize) -> Option<Match>","parent":null,"children":[],"decl_id":null,"docs":" Get the capture group by its index in the regex.","sig":null,"attributes":[{"value":"/ Get the capture group by its index in the regex.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":18439,"byte_end":18491,"line_start":591,"line_end":591,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":18496,"byte_end":18499,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ If there is no match for that group or the index does not correspond to a group, `None` is","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":18504,"byte_end":18598,"line_start":593,"line_end":593,"column_start":5,"column_end":99}},{"value":"/ returned. The index 0 returns the whole match.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":18603,"byte_end":18653,"line_start":594,"line_end":594,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":19616,"byte_end":19620,"line_start":623,"line_end":623,"column_start":12,"column_end":16},"name":"name","qualname":"<Captures>::name","value":"pub fn name(&Self, &str) -> Option<Match>","parent":null,"children":[],"decl_id":null,"docs":" Returns the match for a named capture group.  Returns `None` the capture\n group did not match or if there is no group with the given name.\n","sig":null,"attributes":[{"value":"/ Returns the match for a named capture group.  Returns `None` the capture","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":19455,"byte_end":19531,"line_start":621,"line_end":621,"column_start":5,"column_end":81}},{"value":"/ group did not match or if there is no group with the given name.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":19536,"byte_end":19604,"line_start":622,"line_end":622,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":20758,"byte_end":20764,"line_start":647,"line_end":647,"column_start":12,"column_end":18},"name":"expand","qualname":"<Captures>::expand","value":"pub fn expand(&Self, &str, &mut String)","parent":null,"children":[],"decl_id":null,"docs":" Expands all instances of `$group` in `replacement` to the corresponding\n capture group `name`, and writes them to the `dst` buffer given.","sig":null,"attributes":[{"value":"/ Expands all instances of `$group` in `replacement` to the corresponding","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":19737,"byte_end":19812,"line_start":627,"line_end":627,"column_start":5,"column_end":80}},{"value":"/ capture group `name`, and writes them to the `dst` buffer given.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":19817,"byte_end":19885,"line_start":628,"line_end":628,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":19890,"byte_end":19893,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ `group` may be an integer corresponding to the index of the","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":19898,"byte_end":19961,"line_start":630,"line_end":630,"column_start":5,"column_end":68}},{"value":"/ capture group (counted by order of opening parenthesis where `\\0` is the","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":19966,"byte_end":20042,"line_start":631,"line_end":631,"column_start":5,"column_end":81}},{"value":"/ entire match) or it can be a name (consisting of letters, digits or","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":20047,"byte_end":20118,"line_start":632,"line_end":632,"column_start":5,"column_end":76}},{"value":"/ underscores) corresponding to a named capture group.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":20123,"byte_end":20179,"line_start":633,"line_end":633,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":20184,"byte_end":20187,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ If `group` isn't a valid capture group (whether the name doesn't exist","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":20192,"byte_end":20266,"line_start":635,"line_end":635,"column_start":5,"column_end":79}},{"value":"/ or isn't a valid index), then it is replaced with the empty string.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":20271,"byte_end":20342,"line_start":636,"line_end":636,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":20347,"byte_end":20350,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ The longest possible name is used. e.g., `$1a` looks up the capture","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":20355,"byte_end":20426,"line_start":638,"line_end":638,"column_start":5,"column_end":76}},{"value":"/ group named `1a` and not the capture group at index `1`. To exert more","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":20431,"byte_end":20505,"line_start":639,"line_end":639,"column_start":5,"column_end":79}},{"value":"/ precise control over the name, use braces, e.g., `${1}a`.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":20510,"byte_end":20571,"line_start":640,"line_end":640,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":20576,"byte_end":20579,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ To write a literal `$`, use `$$`.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":20584,"byte_end":20621,"line_start":642,"line_end":642,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":20626,"byte_end":20629,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ For more control over expansion, see [`Expander`].","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":20634,"byte_end":20688,"line_start":644,"line_end":644,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":20693,"byte_end":20696,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ [`Expander`]: expand/struct.Expander.html","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":20701,"byte_end":20746,"line_start":646,"line_end":646,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":21044,"byte_end":21048,"line_start":653,"line_end":653,"column_start":12,"column_end":16},"name":"iter","qualname":"<Captures>::iter","value":"pub fn iter<'c>(&'c Self) -> SubCaptureMatches","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the captured groups in order in which they appeared in the regex. The first\n capture corresponds to the whole match.\n","sig":null,"attributes":[{"value":"/ Iterate over the captured groups in order in which they appeared in the regex. The first","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":20892,"byte_end":20984,"line_start":651,"line_end":651,"column_start":5,"column_end":97}},{"value":"/ capture corresponds to the whole match.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":20989,"byte_end":21032,"line_start":652,"line_end":652,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":21273,"byte_end":21276,"line_start":659,"line_end":659,"column_start":12,"column_end":15},"name":"len","qualname":"<Captures>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" How many groups were captured. This is always at least 1 because group 0 returns the whole\n match.\n","sig":null,"attributes":[{"value":"/ How many groups were captured. This is always at least 1 because group 0 returns the whole","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":21152,"byte_end":21246,"line_start":657,"line_end":657,"column_start":5,"column_end":99}},{"value":"/ match.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":21251,"byte_end":21261,"line_start":658,"line_end":658,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22066,"byte_end":22071,"line_start":687,"line_end":687,"column_start":5,"column_end":10},"name":"Empty","qualname":"::Expr::Empty","value":"Expr::Empty","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" An empty expression, e.g. the last branch in `(a|b|)`\n","sig":null,"attributes":[{"value":"/ An empty expression, e.g. the last branch in `(a|b|)`","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22004,"byte_end":22061,"line_start":686,"line_end":686,"column_start":5,"column_end":62}}]},{"kind":"StructVariant","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22110,"byte_end":22113,"line_start":689,"line_end":689,"column_start":5,"column_end":8},"name":"Any","qualname":"::Expr::Any","value":"Expr::Any { newline }","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Any character, regex `.`\n","sig":null,"attributes":[{"value":"/ Any character, regex `.`","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22077,"byte_end":22105,"line_start":688,"line_end":688,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22230,"byte_end":22239,"line_start":694,"line_end":694,"column_start":5,"column_end":14},"name":"StartText","qualname":"::Expr::StartText","value":"Expr::StartText","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Start of input text\n","sig":null,"attributes":[{"value":"/ Start of input text","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22202,"byte_end":22225,"line_start":693,"line_end":693,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22271,"byte_end":22278,"line_start":696,"line_end":696,"column_start":5,"column_end":12},"name":"EndText","qualname":"::Expr::EndText","value":"Expr::EndText","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" End of input text\n","sig":null,"attributes":[{"value":"/ End of input text","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22245,"byte_end":22266,"line_start":695,"line_end":695,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22308,"byte_end":22317,"line_start":698,"line_end":698,"column_start":5,"column_end":14},"name":"StartLine","qualname":"::Expr::StartLine","value":"Expr::StartLine","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Start of a line\n","sig":null,"attributes":[{"value":"/ Start of a line","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22284,"byte_end":22303,"line_start":697,"line_end":697,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22345,"byte_end":22352,"line_start":700,"line_end":700,"column_start":5,"column_end":12},"name":"EndLine","qualname":"::Expr::EndLine","value":"Expr::EndLine","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" End of a line\n","sig":null,"attributes":[{"value":"/ End of a line","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22323,"byte_end":22340,"line_start":699,"line_end":699,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22400,"byte_end":22407,"line_start":702,"line_end":702,"column_start":5,"column_end":12},"name":"Literal","qualname":"::Expr::Literal","value":"Expr::Literal { val, casei }","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" The string as a literal, e.g. `a`\n","sig":null,"attributes":[{"value":"/ The string as a literal, e.g. `a`","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22358,"byte_end":22395,"line_start":701,"line_end":701,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22698,"byte_end":22704,"line_start":710,"line_end":710,"column_start":5,"column_end":11},"name":"Concat","qualname":"::Expr::Concat","value":"Expr::Concat(Vec<Expr>)","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Concatenation of multiple expressions, must match in order, e.g. `a.` is a concatenation of\n the literal `a` and `.` for any character\n","sig":null,"attributes":[{"value":"/ Concatenation of multiple expressions, must match in order, e.g. `a.` is a concatenation of","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22548,"byte_end":22643,"line_start":708,"line_end":708,"column_start":5,"column_end":100}},{"value":"/ the literal `a` and `.` for any character","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22648,"byte_end":22693,"line_start":709,"line_end":709,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22874,"byte_end":22877,"line_start":713,"line_end":713,"column_start":5,"column_end":8},"name":"Alt","qualname":"::Expr::Alt","value":"Expr::Alt(Vec<Expr>)","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Alternative of multiple expressions, one of them must match, e.g. `a|b` is an alternative\n where either the literal `a` or `b` must match\n","sig":null,"attributes":[{"value":"/ Alternative of multiple expressions, one of them must match, e.g. `a|b` is an alternative","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22721,"byte_end":22814,"line_start":711,"line_end":711,"column_start":5,"column_end":98}},{"value":"/ where either the literal `a` or `b` must match","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22819,"byte_end":22869,"line_start":712,"line_end":712,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":23020,"byte_end":23025,"line_start":716,"line_end":716,"column_start":5,"column_end":10},"name":"Group","qualname":"::Expr::Group","value":"Expr::Group(Box<Expr>)","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Capturing group of expression, e.g. `(a.)` matches `a` and any character and \"captures\"\n (remembers) the match\n","sig":null,"attributes":[{"value":"/ Capturing group of expression, e.g. `(a.)` matches `a` and any character and \"captures\"","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22894,"byte_end":22985,"line_start":714,"line_end":714,"column_start":5,"column_end":96}},{"value":"/ (remembers) the match","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":22990,"byte_end":23015,"line_start":715,"line_end":715,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":23223,"byte_end":23233,"line_start":719,"line_end":719,"column_start":5,"column_end":15},"name":"LookAround","qualname":"::Expr::LookAround","value":"Expr::LookAround(Box<Expr>, LookAround)","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Look-around (e.g. positive/negative look-ahead or look-behind) with an expression, e.g.\n `(?=a)` means the next character must be `a` (but the match is not consumed)\n","sig":null,"attributes":[{"value":"/ Look-around (e.g. positive/negative look-ahead or look-behind) with an expression, e.g.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":23042,"byte_end":23133,"line_start":717,"line_end":717,"column_start":5,"column_end":96}},{"value":"/ `(?=a)` means the next character must be `a` (but the match is not consumed)","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":23138,"byte_end":23218,"line_start":718,"line_end":718,"column_start":5,"column_end":85}}]},{"kind":"StructVariant","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":23325,"byte_end":23331,"line_start":721,"line_end":721,"column_start":5,"column_end":11},"name":"Repeat","qualname":"::Expr::Repeat","value":"Expr::Repeat { child, lo, hi, greedy }","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Repeat of an expression, e.g. `a*` or `a+` or `a{1,3}`\n","sig":null,"attributes":[{"value":"/ Repeat of an expression, e.g. `a*` or `a+` or `a{1,3}`","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":23262,"byte_end":23320,"line_start":720,"line_end":720,"column_start":5,"column_end":63}}]},{"kind":"StructVariant","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":23960,"byte_end":23968,"line_start":734,"line_end":734,"column_start":5,"column_end":13},"name":"Delegate","qualname":"::Expr::Delegate","value":"Expr::Delegate { inner, size, casei }","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Delegate a regex to the regex crate. This is used as a simplification so that we don't have\n to represent all the expressions in the AST, e.g. character classes.\n","sig":null,"attributes":[{"value":"/ Delegate a regex to the regex crate. This is used as a simplification so that we don't have","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":23783,"byte_end":23878,"line_start":732,"line_end":732,"column_start":5,"column_end":100}},{"value":"/ to represent all the expressions in the AST, e.g. character classes.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":23883,"byte_end":23955,"line_start":733,"line_end":733,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":24379,"byte_end":24386,"line_start":744,"line_end":744,"column_start":5,"column_end":12},"name":"Backref","qualname":"::Expr::Backref","value":"Expr::Backref(usize)","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Back reference to a capture group, e.g. `\\1` in `(abc|def)\\1` references the captured group\n and the whole regex matches either `abcabc` or `defdef`.\n","sig":null,"attributes":[{"value":"/ Back reference to a capture group, e.g. `\\1` in `(abc|def)\\1` references the captured group","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":24214,"byte_end":24309,"line_start":742,"line_end":742,"column_start":5,"column_end":100}},{"value":"/ and the whole regex matches either `abcabc` or `defdef`.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":24314,"byte_end":24374,"line_start":743,"line_end":743,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":24448,"byte_end":24460,"line_start":746,"line_end":746,"column_start":5,"column_end":17},"name":"NamedBackref","qualname":"::Expr::NamedBackref","value":"Expr::NamedBackref(String)","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Back reference to a named capture group.\n","sig":null,"attributes":[{"value":"/ Back reference to a named capture group.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":24399,"byte_end":24443,"line_start":745,"line_end":745,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":24657,"byte_end":24668,"line_start":749,"line_end":749,"column_start":5,"column_end":16},"name":"AtomicGroup","qualname":"::Expr::AtomicGroup","value":"Expr::AtomicGroup(Box<Expr>)","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Atomic non-capturing group, e.g. `(?>ab|a)` in text that contains `ab` will match `ab` and\n never backtrack and try `a`, even if matching fails after the atomic group.\n","sig":null,"attributes":[{"value":"/ Atomic non-capturing group, e.g. `(?>ab|a)` in text that contains `ab` will match `ab` and","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":24474,"byte_end":24568,"line_start":747,"line_end":747,"column_start":5,"column_end":99}},{"value":"/ never backtrack and try `a`, even if matching fails after the atomic group.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":24573,"byte_end":24652,"line_start":748,"line_end":748,"column_start":5,"column_end":84}}]},{"kind":"Enum","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":21993,"byte_end":21997,"line_start":685,"line_end":685,"column_start":10,"column_end":14},"name":"Expr","qualname":"::Expr","value":"pub enum Expr {\n\n    /// An empty expression, e.g. the last branch in `(a|b|)`\n    Empty,\n\n    /// Any character, regex `.`\n    Any {\n        /// Whether it also matches newlines or not\n        newline: bool,\n    },\n\n    /// Start of input text\n    StartText,\n\n    /// End of input text\n    EndText,\n\n    /// Start of a line\n    StartLine,\n\n    /// End of a line\n    EndLine,\n\n    /// The string as a literal, e.g. `a`\n    Literal {\n        /// The string to match\n        val: String,\n        /// Whether match is case-insensitive or not\n        casei: bool,\n    },\n\n    /// Concatenation of multiple expressions, must match in order, e.g. `a.` is a concatenation of\n    /// the literal `a` and `.` for any character\n    Concat(Vec<Expr>),\n\n    /// Alternative of multiple expressions, one of them must match, e.g. `a|b` is an alternative\n    /// where either the literal `a` or `b` must match\n    Alt(Vec<Expr>),\n\n    /// Capturing group of expression, e.g. `(a.)` matches `a` and any character and \"captures\"\n    /// (remembers) the match\n    Group(Box<Expr>),\n\n    /// Look-around (e.g. positive/negative look-ahead or look-behind) with an expression, e.g.\n    /// `(?=a)` means the next character must be `a` (but the match is not consumed)\n    LookAround(Box<Expr>, LookAround),\n\n    /// Repeat of an expression, e.g. `a*` or `a+` or `a{1,3}`\n    Repeat {\n        /// The expression that is being repeated\n        child: Box<Expr>,\n        /// The minimum number of repetitions\n        lo: usize,\n        /// The maximum number of repetitions (or `usize::MAX`)\n        hi: usize,\n        /// Greedy means as much as possible is matched, e.g. `.*b` would match all of `abab`.\n        /// Non-greedy means as little as possible, e.g. `.*?b` would match only `ab` in `abab`.\n        greedy: bool,\n    },\n\n    /// Delegate a regex to the regex crate. This is used as a simplification so that we don't have\n    /// to represent all the expressions in the AST, e.g. character classes.\n    Delegate {\n        /// The regex\n        inner: String,\n        /// How many characters the regex matches\n        size: usize,\n        /// Whether the matching is case-insensitive or not\n        casei: bool,\n    },\n\n    /// Back reference to a capture group, e.g. `\\1` in `(abc|def)\\1` references the captured group\n    /// and the whole regex matches either `abcabc` or `defdef`.\n    Backref(usize),\n\n    /// Back reference to a named capture group.\n    NamedBackref(String),\n\n    /// Atomic non-capturing group, e.g. `(?>ab|a)` in text that contains `ab` will match `ab` and\n    /// never backtrack and try `a`, even if matching fails after the atomic group.\n    AtomicGroup(Box<Expr>),\n}","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":605},{"krate":0,"index":610},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":620}],"decl_id":null,"docs":" Regular expression AST. This is public for now but may change.\n","sig":null,"attributes":[{"value":"/ Regular expression AST. This is public for now but may change.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":21885,"byte_end":21951,"line_start":683,"line_end":683,"column_start":1,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":24870,"byte_end":24879,"line_start":756,"line_end":756,"column_start":5,"column_end":14},"name":"LookAhead","qualname":"::LookAround::LookAhead","value":"LookAround::LookAhead","parent":{"krate":0,"index":632},"children":[],"decl_id":null,"docs":" Look-ahead assertion, e.g. `(?=a)`\n","sig":null,"attributes":[{"value":"/ Look-ahead assertion, e.g. `(?=a)`","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":24827,"byte_end":24865,"line_start":755,"line_end":755,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":24937,"byte_end":24949,"line_start":758,"line_end":758,"column_start":5,"column_end":17},"name":"LookAheadNeg","qualname":"::LookAround::LookAheadNeg","value":"LookAround::LookAheadNeg","parent":{"krate":0,"index":632},"children":[],"decl_id":null,"docs":" Negative look-ahead assertion, e.g. `(?!a)`\n","sig":null,"attributes":[{"value":"/ Negative look-ahead assertion, e.g. `(?!a)`","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":24885,"byte_end":24932,"line_start":757,"line_end":757,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":637},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":25000,"byte_end":25010,"line_start":760,"line_end":760,"column_start":5,"column_end":15},"name":"LookBehind","qualname":"::LookAround::LookBehind","value":"LookAround::LookBehind","parent":{"krate":0,"index":632},"children":[],"decl_id":null,"docs":" Look-behind assertion, e.g. `(?<=a)`\n","sig":null,"attributes":[{"value":"/ Look-behind assertion, e.g. `(?<=a)`","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":24955,"byte_end":24995,"line_start":759,"line_end":759,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":639},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":25070,"byte_end":25083,"line_start":762,"line_end":762,"column_start":5,"column_end":18},"name":"LookBehindNeg","qualname":"::LookAround::LookBehindNeg","value":"LookAround::LookBehindNeg","parent":{"krate":0,"index":632},"children":[],"decl_id":null,"docs":" Negative look-behind assertion, e.g. `(?<!a)`\n","sig":null,"attributes":[{"value":"/ Negative look-behind assertion, e.g. `(?<!a)`","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":25016,"byte_end":25065,"line_start":761,"line_end":761,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":24810,"byte_end":24820,"line_start":754,"line_end":754,"column_start":10,"column_end":20},"name":"LookAround","qualname":"::LookAround","value":"pub enum LookAround {\n\n    /// Look-ahead assertion, e.g. `(?=a)`\n    LookAhead,\n\n    /// Negative look-ahead assertion, e.g. `(?!a)`\n    LookAheadNeg,\n\n    /// Look-behind assertion, e.g. `(?<=a)`\n    LookBehind,\n\n    /// Negative look-behind assertion, e.g. `(?<!a)`\n    LookBehindNeg,\n}","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":639}],"decl_id":null,"docs":" Type of look-around assertion as used for a look-around expression.\n","sig":null,"attributes":[{"value":"/ Type of look-around assertion as used for a look-around expression.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":24684,"byte_end":24755,"line_start":752,"line_end":752,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":25329,"byte_end":25341,"line_start":769,"line_end":769,"column_start":12,"column_end":24},"name":"CaptureNames","qualname":"::CaptureNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over capture names in a [Regex].  The iterator\n returns the name of each group, or [None] if the group has\n no name.  Because capture group 0 cannot have a name, the\n first item returned is always [None].\n","sig":null,"attributes":[{"value":"/ An iterator over capture names in a [Regex].  The iterator","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":25088,"byte_end":25150,"line_start":765,"line_end":765,"column_start":1,"column_end":63}},{"value":"/ returns the name of each group, or [None] if the group has","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":25151,"byte_end":25213,"line_start":766,"line_end":766,"column_start":1,"column_end":63}},{"value":"/ no name.  Because capture group 0 cannot have a name, the","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":25214,"byte_end":25275,"line_start":767,"line_end":767,"column_start":1,"column_end":62}},{"value":"/ first item returned is always [None].","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":25276,"byte_end":25317,"line_start":768,"line_end":768,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":26408,"byte_end":26418,"line_start":810,"line_end":810,"column_start":12,"column_end":22},"name":"parse_tree","qualname":"<Expr>::parse_tree","value":"pub fn parse_tree(&str) -> Result<ExprTree>","parent":null,"children":[],"decl_id":null,"docs":" Parse the regex and return an expression (AST) and a bit set with the indexes of groups\n that are referenced by backrefs.\n","sig":null,"attributes":[{"value":"/ Parse the regex and return an expression (AST) and a bit set with the indexes of groups","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":26264,"byte_end":26355,"line_start":808,"line_end":808,"column_start":5,"column_end":96}},{"value":"/ that are referenced by backrefs.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":26360,"byte_end":26396,"line_start":809,"line_end":809,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":26692,"byte_end":26698,"line_start":819,"line_end":819,"column_start":12,"column_end":18},"name":"to_str","qualname":"<Expr>::to_str","value":"pub fn to_str(&Self, &mut String, u8)","parent":null,"children":[],"decl_id":null,"docs":" Convert expression to a regex string in the regex crate's syntax.","sig":null,"attributes":[{"value":"/ Convert expression to a regex string in the regex crate's syntax.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":26488,"byte_end":26557,"line_start":814,"line_end":814,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":26562,"byte_end":26565,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":26570,"byte_end":26582,"line_start":816,"line_end":816,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":26587,"byte_end":26590,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ Panics for expressions that are hard, i.e. can not be handled by the regex crate.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":26595,"byte_end":26680,"line_start":818,"line_end":818,"column_start":5,"column_end":90}}]},{"kind":"Mod","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":31849,"byte_end":31857,"line_start":987,"line_end":987,"column_start":9,"column_end":17},"name":"internal","qualname":"::internal","value":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"decl_id":null,"docs":" The internal module only exists so that the toy example can access internals for debugging and\n experimenting.\n","sig":null,"attributes":[{"value":"/ The internal module only exists so that the toy example can access internals for debugging and","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":31708,"byte_end":31806,"line_start":984,"line_end":984,"column_start":1,"column_end":99}},{"value":"/ experimenting.","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":31807,"byte_end":31825,"line_start":985,"line_end":985,"column_start":1,"column_end":19}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\analyze.rs","byte_start":36474,"byte_end":36478,"line_start":50,"line_end":50,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\analyze.rs","byte_start":37296,"byte_end":37304,"line_start":79,"line_end":79,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\compile.rs","byte_start":45515,"byte_end":45524,"line_start":41,"line_end":41,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\compile.rs","byte_start":47095,"byte_end":47103,"line_start":99,"line_end":99,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\compile.rs","byte_start":59596,"byte_end":59611,"line_start":467,"line_end":467,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":68141,"byte_end":68146,"line_start":61,"line_end":61,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":68173,"byte_end":68178,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":70653,"byte_end":70661,"line_start":17,"line_end":17,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":70983,"byte_end":70991,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\parse.rs","byte_start":80016,"byte_end":80022,"line_start":62,"line_end":62,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":127016,"byte_end":127020,"line_start":194,"line_end":194,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":128518,"byte_end":128523,"line_start":245,"line_end":245,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":6579,"byte_end":6591,"line_start":239,"line_end":239,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":6826,"byte_end":6838,"line_start":250,"line_end":250,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":8967,"byte_end":8972,"line_start":300,"line_end":300,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":9138,"byte_end":9143,"line_start":307,"line_end":307,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":17346,"byte_end":17351,"line_start":546,"line_end":546,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":18264,"byte_end":18269,"line_start":583,"line_end":583,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":18420,"byte_end":18428,"line_start":590,"line_end":590,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":21503,"byte_end":21520,"line_start":667,"line_end":667,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":25400,"byte_end":25412,"line_start":771,"line_end":771,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":25551,"byte_end":25563,"line_start":777,"line_end":777,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":26253,"byte_end":26257,"line_start":807,"line_end":807,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\analyze.rs","byte_start":36474,"byte_end":36478,"line_start":50,"line_end":50,"column_start":10,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\analyze.rs","byte_start":37296,"byte_end":37304,"line_start":79,"line_end":79,"column_start":10,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":25},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\compile.rs","byte_start":45515,"byte_end":45524,"line_start":41,"line_end":41,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":48},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\compile.rs","byte_start":47095,"byte_end":47103,"line_start":99,"line_end":99,"column_start":6,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":60},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\compile.rs","byte_start":59596,"byte_end":59611,"line_start":467,"line_end":467,"column_start":6,"column_end":21},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":68141,"byte_end":68146,"line_start":61,"line_end":61,"column_start":30,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":353},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\error.rs","byte_start":68173,"byte_end":68178,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":353},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":70653,"byte_end":70661,"line_start":17,"line_end":17,"column_start":18,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":402},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\expand.rs","byte_start":70983,"byte_end":70991,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\parse.rs","byte_start":80016,"byte_end":80022,"line_start":62,"line_end":62,"column_start":10,"column_end":16},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":127016,"byte_end":127020,"line_start":194,"line_end":194,"column_start":6,"column_end":10},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\vm.rs","byte_start":128518,"byte_end":128523,"line_start":245,"line_end":245,"column_start":6,"column_end":11},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":6579,"byte_end":6591,"line_start":239,"line_end":239,"column_start":18,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":567},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":6826,"byte_end":6838,"line_start":250,"line_end":250,"column_start":6,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":8967,"byte_end":8972,"line_start":300,"line_end":300,"column_start":21,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":9138,"byte_end":9143,"line_start":307,"line_end":307,"column_start":6,"column_end":11},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":17346,"byte_end":17351,"line_start":546,"line_end":546,"column_start":10,"column_end":15},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":18264,"byte_end":18269,"line_start":583,"line_end":583,"column_start":30,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":2,"index":28619},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":18420,"byte_end":18428,"line_start":590,"line_end":590,"column_start":10,"column_end":18},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":21503,"byte_end":21520,"line_start":667,"line_end":667,"column_start":27,"column_end":44},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":558},"to":{"krate":2,"index":4996}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":25400,"byte_end":25412,"line_start":771,"line_end":771,"column_start":16,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":313},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":25551,"byte_end":25563,"line_start":777,"line_end":777,"column_start":23,"column_end":35},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":313},"to":{"krate":2,"index":4996}},{"span":{"file_name":"C:\\Users\\krisa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fancy-regex-0.4.0\\src\\lib.rs","byte_start":26253,"byte_end":26257,"line_start":807,"line_end":807,"column_start":6,"column_end":10},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":576},"to":{"krate":4294967295,"index":4294967295}}]}